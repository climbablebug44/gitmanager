#!/usr/bin/env bash

try_checkout(){
    branch_name=$1
    can_checkout=$(git checkout $branch_name 2>&1 | grep 'error')
    if [[ "$can_checkout" == "" ]]
    then 
        echo "checkout to $branch_name success"
        return 0
    else
        echo "cannot checkout to $branch_name"
        return 1
    fi
}

PATHS_FILE="./paths"
paths=$(cat $PATHS_FILE)

for gitpath in $paths;
do
    path=$(printf "$gitpath" | awk -F ':' '{ print $1 }')
    REMOTE=$(printf "$gitpath" | awk -F ':' '{ print $2 }')
    echo "running for '$path'"
    cd $path
    BRANCH=$(git branch | grep '*' | awk '{print $2}')
    echo "on branch $BRANCH"
    UNTRACKED="$(git status | grep -E 'untracked|modified')"
    stashed=false
    if [[ "$UNTRACKED" == "" ]]
    then
        echo "no dirty files, checking out to main/master"
    else
        echo 'dirty files present'
        git stash
        stashed=true
    fi

    checkout_success=false
    MAIN_BRANCH=""
    if [[ "$BRANCH" == "main" ]] || [[ "$BRANCH" == "master" ]]
    then
        checkout_success=true
        MAIN_BRANCH=$BRANCH
    else
        try_checkout 'master'
        if [[ $? -eq  0 ]] 
        then 
            checkout_success=true; 
            MAIN_BRANCH="master"
        else
            try_checkout 'main'
            if [[ $? -eq  0 ]] then checkout_success=true; MAIN_BRANCH="main"; fi
        fi
    fi

    
    if [[ $checkout_success ]]
    then
        echo "updating..."
        git pull $REMOTE $MAIN_BRANCH
        echo 'restoring state...'
        git checkout $BRANCH
        if [[ $stashed ]]
        then
            echo 'restoring stash...'
            git stash pop 2>&1 > /dev/null
        fi
        echo 'all done...' 
    else
        echo "no main/master branch"
    fi
done;